enum ProjectStatus {
    BIDDING,
    EVALUATING,
    END,
}

type ProjectOfManager {
    id: ID
    name: String
    description: String
    status: ProjectStatus
}

type ProjectOfSupplier {
    id: ID
    name: String
    description: String
    status: ProjectStatus
}

type ProjectOfEvaluator {
    id: ID
    name: String
    description: String
    status: ProjectStatus
}

input CreateProjectInput {
    name: String,
    description: String
}

type Query {
    projectOfManager(id: ID): ProjectOfManager
    projectOfSupplier(id: ID): ProjectOfSupplier
    projectOfEvaluator(id: ID): ProjectOfEvaluator
    
    projectsOfManager(page: Int, size: Int, cursor: ID ): [ProjectOfManager]
    projectsOfSupplier(page: Int, size: Int, cursor: ID ): [ProjectOfSupplier]
    projectsOfEvaluator(page: Int, size: Int, cursor: ID ): [ProjectOfEvaluator]
}

type Mutation {
    createProject(data: CreateProjectInput): ProjectOfManager
}